source/blender/editors/mesh/meshtools.c:  if (ob->mode & OB_MODE_EDIT) {
source/blender/editors/mesh/meshtools.c:  if (ob->mode & OB_MODE_EDIT && ob->type == OB_MESH && ob->defbase.first) {
source/blender/editors/mesh/meshtools.c:    if (ob->mode & OB_MODE_EDIT) {
source/blender/editors/space_view3d/space_view3d.c:      if ((view_layer->basact->flag & BASE_VISIBLE) != 0 || (ob->mode & OB_MODE_EDIT)) {
source/blender/editors/space_view3d/space_view3d.c:      if ((view_layer->basact->flag & BASE_VISIBLE) != 0 || (ob->mode & OB_MODE_EDIT) != 0) {
source/blender/editors/space_view3d/view3d_select.c:    if (ob->mode & OB_MODE_EDIT) {
source/blender/editors/space_view3d/view3d_buttons.c:  else if (((ob->mode & OB_MODE_EDIT) == 0) && (ELEM(ob->type, OB_ARMATURE))) {
source/blender/editors/space_view3d/view3d_edit.c:  else if (ob_act && (ob_act->mode & OB_MODE_EDIT) && (ob_act->type == OB_FONT)) {
source/blender/editors/space_view3d/view3d_edit.c:    const bool xray_active = ((obact && (obact->mode & OB_MODE_EDIT)) ||
source/blender/editors/space_image/image_edit.c:  if (!(ob && (ob->mode & OB_MODE_EDIT) && ED_space_image_show_uvedit(sima, ob))) {
source/blender/editors/space_image/image_edit.c:  if (ob && ((ob->mode & (OB_MODE_TEXTURE_PAINT | OB_MODE_EDIT)) != 0)) {
source/blender/editors/space_image/image_edit.c:  if (ob && ob->mode & OB_MODE_EDIT && ED_space_image_show_uvedit(sima, ob)) {
source/blender/editors/space_image/space_image.c:          if (ob && (ob == wmn->reference) && (ob->mode & OB_MODE_EDIT)) {
source/blender/editors/curve/editfont_undo.c:  ED_object_mode_set(C, OB_MODE_EDIT);
source/blender/editors/interface/interface_templates.c:          (idfrom && GS(idfrom->name) == ID_OB && (((Object *)idfrom)->mode & OB_MODE_EDIT))) {
source/blender/editors/transform/transform_gizmo_extrude_3d.c:    /* GPXX: Remove if OB_MODE_EDIT_GPENCIL is merged with OB_MODE_EDIT */
source/blender/editors/transform/transform_gizmo_3d.c:  if (params->use_local_axis && (ob && ob->mode & OB_MODE_EDIT)) {
source/blender/editors/transform/transform_gizmo_3d.c:  if (ob && ob->mode & OB_MODE_EDIT) {
source/blender/editors/transform/transform_generics.c:      if (ob->mode == OB_MODE_EDIT) {
source/blender/editors/transform/transform_generics.c:  if ((object_mode & OB_MODE_EDIT) || (t->options & CTX_GPENCIL_STROKES) ||
source/blender/editors/transform/transform_generics.c:      if (object_mode & OB_MODE_EDIT) {
source/blender/editors/transform/transform_generics.c:  t->obedit_type = ((object_mode == OB_MODE_EDIT) || (object_mode == OB_MODE_EDIT_GPENCIL)) ?
source/blender/editors/undo/ed_undo.c:      if (obact->mode & (OB_MODE_SCULPT | OB_MODE_EDIT)) {
source/blender/editors/io/io_alembic.c:    ED_object_mode_toggle(C, OB_MODE_EDIT);
source/blender/editors/object/object_add.c:  if (ob->mode & OB_MODE_EDIT) {
source/blender/editors/object/object_add.c:  if (ob->mode & OB_MODE_EDIT) {
source/blender/editors/object/object_utils.c:  if (ob->mode & OB_MODE_EDIT) {
source/blender/editors/object/object_facemap_ops.c:    if (ob->mode == OB_MODE_EDIT) {
source/blender/editors/object/object_modes.c:  if (mode & OB_MODE_EDIT) {
source/blender/editors/object/object_modes.c:  if (mode == OB_MODE_EDIT_GPENCIL) {
source/blender/editors/object/object_modes.c:        if (mode & (OB_MODE_EDIT | OB_MODE_SCULPT | OB_MODE_VERTEX_PAINT | OB_MODE_WEIGHT_PAINT |
source/blender/editors/object/object_modes.c:        if (mode & (OB_MODE_EDIT)) {
source/blender/editors/object/object_modes.c:        if (mode & (OB_MODE_EDIT | OB_MODE_WEIGHT_PAINT)) {
source/blender/editors/object/object_modes.c:        if (mode & (OB_MODE_EDIT | OB_MODE_POSE)) {
source/blender/editors/object/object_modes.c:        if (mode & (OB_MODE_EDIT | OB_MODE_EDIT_GPENCIL | OB_MODE_PAINT_GPENCIL |
source/blender/editors/object/object_modes.c:  if (ob->mode & OB_MODE_EDIT) {
source/blender/editors/object/object_vgroup.c:  if (ob->mode == OB_MODE_EDIT) {
source/blender/editors/object/object_vgroup.c:  if (ob->mode == OB_MODE_EDIT) {
source/blender/editors/object/object_select.c:  if (!ELEM(ob->mode, OB_MODE_EDIT, OB_MODE_POSE)) {
source/blender/editors/object/object_select.c:  if (ob->mode == OB_MODE_EDIT && arm->edbo != NULL) {
source/blender/editors/object/object_edit.c:    if (UNLIKELY(obedit && obedit->mode & OB_MODE_EDIT)) {
source/blender/editors/object/object_edit.c:      obedit->mode &= ~OB_MODE_EDIT;
source/blender/editors/object/object_edit.c:    obedit->mode &= ~OB_MODE_EDIT;
source/blender/editors/object/object_edit.c:  return (obedit->mode & OB_MODE_EDIT) == 0;
source/blender/editors/object/object_edit.c:  ob->mode = OB_MODE_EDIT;
source/blender/editors/object/object_edit.c:      ob->mode &= ~OB_MODE_EDIT;
source/blender/editors/object/object_edit.c:  return (ob->mode & OB_MODE_EDIT) != 0;
source/blender/editors/object/object_edit.c:  const int mode_flag = OB_MODE_EDIT;
source/blender/editors/object/object_edit.c:  if ((ob->restrictflag & OB_RESTRICT_VIEWPORT) && !(ob->mode & OB_MODE_EDIT)) {
source/blender/editors/object/object_edit.c:      if ((input->value == OB_MODE_EDIT && OB_TYPE_SUPPORT_EDITMODE(ob->type)) ||
source/blender/editors/object/object_edit.c:                OB_MODE_EDIT_GPENCIL,
source/blender/editors/object/object_edit.c:          case OB_MODE_EDIT:
source/blender/editors/object/object_edit.c:  if ((ob != NULL) && (ob->type == OB_GPENCIL) && (mode == OB_MODE_EDIT)) {
source/blender/editors/object/object_edit.c:    mode = OB_MODE_EDIT_GPENCIL;
source/blender/editors/object/object_shapekey.c:  return (ob && !ID_IS_LINKED(ob) && data && !ID_IS_LINKED(data) && ob->mode != OB_MODE_EDIT);
source/blender/editors/object/object_shapekey.c:  return (ob && !ID_IS_LINKED(ob) && data && !ID_IS_LINKED(data) && ob->mode != OB_MODE_EDIT) &&
source/blender/editors/object/object_shapekey.c:  return (ob && !ID_IS_LINKED(ob) && data && !ID_IS_LINKED(data) && ob->mode != OB_MODE_EDIT &&
source/blender/editors/gpencil/gpencil_utils.c:    case OB_MODE_EDIT_GPENCIL:
source/blender/editors/gpencil/gpencil_data.c:      if (ELEM(ob->mode, OB_MODE_EDIT_GPENCIL, OB_MODE_SCULPT_GPENCIL)) {
source/blender/editors/gpencil/gpencil_edit.c:    mode = OB_MODE_EDIT_GPENCIL;
source/blender/editors/armature/armature_select.c:                                                          .object_mode = OB_MODE_EDIT,
source/blender/editors/util/ed_util.c:        if (mode == OB_MODE_EDIT) {
source/blender/editors/util/ed_util.c:    else if (ob->mode & OB_MODE_EDIT) {
source/blender/editors/space_outliner/outliner_draw.c:  return ((obact && (obact->mode & OB_MODE_EDIT)) && (id && OB_DATA_SUPPORT_EDITMODE(id_type)) &&
source/blender/editors/space_outliner/outliner_edit.c:    else if (obact->mode & OB_MODE_EDIT) {
source/blender/editors/space_outliner/outliner_select.c:  else if ((ob->type != obact->type) || ((obact->mode & OB_MODE_EDIT) == 0) ||
source/blender/editors/space_outliner/outliner_select.c:      ED_object_base_select(base, (ob->mode & OB_MODE_EDIT) ? BA_SELECT : BA_DESELECT);
source/blender/editors/space_outliner/outliner_select.c:           ((obact->mode & OB_MODE_EDIT) && ELEM(OB_ARMATURE, ob->type, obact->type))) {
source/blender/editors/space_outliner/outliner_select.c:  if (obact->mode & OB_MODE_EDIT) {
source/blender/editors/animation/keyframing.c:    ED_object_mode_toggle(C, OB_MODE_EDIT);
source/blender/editors/animation/keyframing.c:    ED_object_mode_toggle(C, OB_MODE_EDIT);
source/blender/editors/screen/screen_ops.c:  return ((ob->restrictflag & OB_RESTRICT_VIEWPORT) && !(ob->mode & OB_MODE_EDIT));
source/blender/editors/screen/screen_ops.c:  if (obact && !(obact->mode & OB_MODE_EDIT)) {
source/blender/editors/screen/screen_ops.c:  if (obpose && !(obpose->mode & OB_MODE_EDIT)) {
source/blender/editors/screen/screen_ops.c:  if (obact && !(obact->mode & OB_MODE_EDIT)) {
source/blender/blenkernel/BKE_layer.h:  FOREACH_BASE_IN_MODE_BEGIN (_view_layer, _v3d, -1, OB_MODE_EDIT, _instance)
source/blender/blenkernel/BKE_layer.h:  BKE_view_layer_array_from_objects_in_mode(view_layer, v3d, r_len, {.object_mode = OB_MODE_EDIT})
source/blender/blenkernel/BKE_layer.h:  BKE_view_layer_array_from_bases_in_mode(view_layer, v3d, r_len, {.object_mode = OB_MODE_EDIT})
source/blender/blenkernel/BKE_layer.h:      view_layer, v3d, r_len, {.object_mode = OB_MODE_EDIT, .no_dup_data = true})
source/blender/blenkernel/BKE_layer.h:      view_layer, v3d, r_len, {.object_mode = OB_MODE_EDIT, .no_dup_data = true})
source/blender/blenkernel/BKE_layer.h:      {.object_mode = OB_MODE_EDIT, \
source/blender/blenkernel/intern/shrinkwrap.c:          dm, &ssmd, scene, NULL, (ob->mode & OB_MODE_EDIT) ? SUBSURF_IN_EDIT_MODE : 0);
source/blender/blenkernel/intern/font.c:      if ((cu->overflow == CU_OVERFLOW_TRUNCATE) && (ob && ob->mode != OB_MODE_EDIT) &&
source/blender/blenkernel/intern/multires.c:  if (ob->mode & OB_MODE_EDIT) {
source/blender/blenkernel/intern/DerivedMesh.c:    if (ob->mode & OB_MODE_EDIT) {
source/blender/blenkernel/intern/object.c:  if (object_mode & OB_MODE_EDIT) {
source/blender/blenkernel/intern/paint.c:        case OB_MODE_EDIT:
source/blender/blenkernel/intern/paint.c:      if (obact && obact->mode == OB_MODE_EDIT) {
source/blender/blenkernel/intern/paint.c:      if (obact && obact->mode == OB_MODE_EDIT) {
source/blender/blenkernel/intern/paint.c:        case OB_MODE_EDIT:
source/blender/blenkernel/intern/paint.c:    paint->runtime.ob_mode = OB_MODE_EDIT;
source/blender/blenkernel/intern/paint.c:      return OB_MODE_EDIT;
source/blender/blenkernel/intern/context.c:      else if (object_mode & OB_MODE_EDIT_GPENCIL) {
source/blender/blenkernel/intern/modifier.c:  if (ob->mode == OB_MODE_EDIT) {
source/blender/blenkernel/intern/modifier.c:  if ((ob_eval->type == OB_MESH) && (ob_eval->mode & OB_MODE_EDIT)) {
source/blender/blenkernel/intern/object_update.c:      BMEditMesh *em = (ob->mode & OB_MODE_EDIT) ? BKE_editmesh_from_object(ob) : NULL;
source/blender/blenkernel/intern/object_update.c:      BMEditMesh *em = (ob->mode & OB_MODE_EDIT) ? ((Mesh *)ob->data)->edit_mesh : NULL;
source/blender/blenkernel/intern/object_update.c:  if (!(ob->mode & OB_MODE_EDIT) && ob->particlesystem.first) {
source/blender/blenloader/intern/readfile.c:    ob->mode &= ~(OB_MODE_EDIT | OB_MODE_PARTICLE_EDIT);
source/blender/blenloader/intern/versioning_defaults.c:    brush->ob_mode |= OB_MODE_EDIT;
source/blender/makesrna/intern/rna_brush.c:  RNA_def_property_boolean_sdna(prop, NULL, "ob_mode", OB_MODE_EDIT);
source/blender/makesrna/intern/rna_scene_api.c:  if ((ob->type == OB_MESH) && (ob->mode == OB_MODE_EDIT)) {
source/blender/makesrna/intern/rna_sculpt_paint.c:    mode = OB_MODE_EDIT;
source/blender/makesrna/intern/rna_object.c:    {OB_MODE_EDIT, "EDIT", ICON_EDITMODE_HLT, "Edit Mode", ""},
source/blender/makesrna/intern/rna_object.c:    {OB_MODE_EDIT_GPENCIL,
source/blender/makesrna/intern/rna_object.c:    {OB_MODE_EDIT, "EDIT", ICON_EDITMODE_HLT, "Edit Mode", ""},
source/blender/makesrna/intern/rna_object.c:    {OB_MODE_EDIT_GPENCIL,
source/blender/makesrna/intern/rna_object.c:  if (ob->mode & OB_MODE_EDIT) {
source/blender/makesdna/DNA_scene_types.h:#define OBEDIT_FROM_OBACT(ob) ((ob) ? (((ob)->mode & OB_MODE_EDIT) ? ob : NULL) : NULL)
source/blender/makesdna/DNA_object_enums.h:  OB_MODE_EDIT = 1 << 0,
source/blender/makesdna/DNA_object_enums.h:  OB_MODE_EDIT_GPENCIL = 1 << 7,
source/blender/makesdna/DNA_object_enums.h:  (OB_MODE_EDIT | OB_MODE_VERTEX_PAINT | OB_MODE_WEIGHT_PAINT | OB_MODE_SCULPT | OB_MODE_POSE)
source/blender/draw/modes/object_mode.c:  if (ob->mode != OB_MODE_EDIT_GPENCIL) {
source/blender/draw/intern/draw_manager.c:  if (DST.draw_ctx.object_mode & OB_MODE_EDIT) {
source/blender/draw/intern/draw_manager.c:      if (object->mode & OB_MODE_EDIT) {
source/blender/draw/intern/draw_manager.c:      if (ob->mode & OB_MODE_EDIT) {
source/blender/draw/intern/draw_common.c:  const bool is_edit = (draw_ctx->object_mode & OB_MODE_EDIT) && (ob->mode & OB_MODE_EDIT);
